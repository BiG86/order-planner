package it.snorcini.dev.orderplanner.dto;

import it.snorcini.dev.orderplanner.error.OrderPlannerValidationErrors;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.EqualsAndHashCode;
import lombok.NoArgsConstructor;

import jakarta.validation.constraints.NotEmpty;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;
import java.time.OffsetDateTime;

/**
 * DTO used to define insert date, modify date and last user modify.
 * Methods:
 * - constructor
 * - getter and setter
 * - equals
 * are auto-generated by Lombok.
 * <p>
 * There is also the Builder @see ActivitiesDTOBuilder.
 * <p>
 * This class @extends {@link AbstractBaseDTO} to beautify toString method.
 */
@Builder
@Data
@EqualsAndHashCode
@AllArgsConstructor
@NoArgsConstructor
public class ActivitiesDTO extends AbstractBaseDTO {

    /**
     * Contains insertion date.
     */
    @NotNull(message = OrderPlannerValidationErrors.EMPTY_DATE_INSERT)
    private OffsetDateTime dateInsert;

    /**
     * Contains last modification date.
     */
    @NotNull(message = OrderPlannerValidationErrors.EMPTY_DATE_MODIFY)
    private OffsetDateTime dateModify;

    /**
     * Contains username of last modification.
     */
    @NotEmpty(message = OrderPlannerValidationErrors.EMPTY_LAST_USER_MODIFY)
    @Size(max = 256, message = OrderPlannerValidationErrors.LAST_USER_MODIFY_TOO_LONG)
    private String lastUserModify;

    /**
     * ToString method.
     *
     * @return a string item representation
     */
    @Override
    public String toString() {
        return new StringBuilder().append("ActivitiesDTO {\n")
                .append("    dateInsert: ").append(dateInsert).append('\n')
                .append("    dateModify: ").append(dateModify).append('\n')
                .append("    lastUserModify: ").append(lastUserModify).append('\n')
                .append('}').toString();
    }
}
